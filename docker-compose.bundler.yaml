version: '3'

networks:
  default:
    name: ar-io

services:
  upload-service:
    image: ghcr.io/ardriveapp/turbo-upload-service:${UPLOAD_SERVICE_IMAGE_TAG:-latest}
    environment:
      ARWEAVE_GATEWAY: ${ARWEAVE_GATEWAY:-http://envoy:3000} # This is the URL of the core service
      PORT: ${UPLOAD_SERVICE_PORT:-5100}
      NODE_ENV: ${NODE_ENV:-local}
      DB_HOST: upload-service-pg
      DB_PORT: 5432
      DB_PASSWORD: postgres
      PAYMENT_SERVICE_BASE_URL: ${PAYMENT_SERVICE_BASE_URL:-payment.ardrive.dev}
      MAX_DATA_ITEM_SIZE: ${MAX_DATA_ITEM_SIZE:-10737418240}
      ALLOW_LISTED_ADDRESSES: ${ALLOW_LISTED_ADDRESSES:-}
      AWS_ENDPOINT: ${AWS_ENDPOINT:-}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
      SQS_PREPARE_BUNDLE_URL: ${SQS_PREPARE_BUNDLE_URL:-}
      SQS_FINALIZE_UPLOAD_URL: ${SQS_FINALIZE_UPLOAD_URL:-}
      SQS_OPTICAL_URL: ${SQS_OPTICAL_URL:-}
      SQS_NEW_DATA_ITEM_URL: ${SQS_NEW_DATA_ITEM_URL:-}
      SQS_UNBUNDLE_BDI_URL: ${SQS_UNBUNDLE_BDI_URL:-}
      OPTICAL_BRIDGING_ENABLED: ${OPTICAL_BRIDGING_ENABLED:-false}
      SKIP_BALANCE_CHECKS: ${SKIP_BALANCE_CHECKS:-true}
      DATA_ITEM_BUCKET: ${DATA_ITEM_BUCKET:-raw-data-items}
      DATA_ITEM_BUCKET_REGION: ${DATA_ITEM_BUCKET_REGION:-us-east-1}
      LOG_LEVEL: ${LOG_LEVEL:-info}
      S3_FORCE_PATH_STYLE: ${S3_FORCE_PATH_STYLE:-}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      MIGRATE_ON_STARTUP: ${MIGRATE_ON_STARTUP:-true}
    ports:
      - 5100:5100
    volumes:
      - upload-service-data-items:/temp
    depends_on:
      - upload-service-pg
      - fulfillment-service
    networks:
      - default

  fulfillment-service:
    image: ghcr.io/ardriveapp/turbo-upload-service-fulfillment:${UPLOAD_SERVICE_IMAGE_TAG:-latest}
    environment:
      ARWEAVE_GATEWAY: ${ARWEAVE_GATEWAY:-http://envoy:3000}
      NODE_ENV: ${NODE_ENV:-local}
      DB_HOST: upload-service-pg
      DB_PORT: 5432
      DB_PASSWORD: postgres
      PORT: ${FULFILLMENT_PORT:-4401}
      AWS_ENDPOINT: ${AWS_ENDPOINT:-}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
      SQS_PREPARE_BUNDLE_URL: ${SQS_PREPARE_BUNDLE_URL:-}
      SQS_POST_BUNDLE_URL: ${SQS_POST_BUNDLE_URL:-}
      SQS_SEED_BUNDLE_URL: ${SQS_SEED_BUNDLE_URL:-}
      SQS_FINALIZE_UPLOAD_URL: ${SQS_FINALIZE_UPLOAD_URL:-}
      SQS_OPTICAL_URL: ${SQS_OPTICAL_URL:-}
      SQS_NEW_DATA_ITEM_URL: ${SQS_NEW_DATA_ITEM_URL:-}
      SQS_UNBUNDLE_BDI_URL: ${SQS_UNBUNDLE_BDI_URL:-}
      PLAN_BUNDLE_ENABLED: ${PLAN_BUNDLE_ENABLED:-true}
      VERIFY_BUNDLE_ENABLED: ${VERIFY_BUNDLE_ENABLED:-true}
      OPTICAL_BRIDGING_ENABLED: ${OPTICAL_BRIDGING_ENABLED:-false}
      SKIP_BALANCE_CHECKS: ${SKIP_BALANCE_CHECKS:-true}
      DATA_ITEM_BUCKET: ${DATA_ITEM_BUCKET:-raw-data-items}
      DATA_ITEM_BUCKET_REGION: ${DATA_ITEM_BUCKET_REGION:-us-east-1}
      S3_FORCE_PATH_STYLE: ${S3_FORCE_PATH_STYLE:-}
      AWS_REGION: ${AWS_REGION:-us-east-1}
    depends_on:
      localstack:
        condition: service_healthy
      upload-service-pg:
        condition: service_started

  upload-service-pg:
    image: postgres:13.8
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - '5432:5432'
    volumes:
      - upload-service-data:/var/lib/postgresql/data

  localstack:
    container_name: '${LOCALSTACK_DOCKER_NAME:-localstack}'
    image: ghcr.io/ardriveapp/turbo-upload-service-localstack:${UPLOAD_SERVICE_IMAGE_TAG:-latest}
    ports:
      - '127.0.0.1:4566:4566' # LocalStack Gateway
      #- "127.0.0.1:4510-4559:4510-4559" # external services port range
    environment:
      # LocalStack configuration: https://docs.localstack.cloud/references/configuration/
      - SERVICES=${SERVICES:-s3,sqs,secretsmanager}
      - DEBUG=${DEBUG:-0}
      - NODE_ENV=${NODE_ENV:-local}
      - ARWEAVE_WALLET=${ARWEAVE_WALLET:-}
      - TURBO_OPTICAL_KEY=${TURBO_OPTICAL_KEY:-$ARWEAVE_WALLET}
    volumes:
      - '${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4566/_localstack/health']
      interval: 90s
      timeout: 30s
      retries: 1
      start_period: 15s

volumes:
  upload-service-data:
  upload-service-data-items:
